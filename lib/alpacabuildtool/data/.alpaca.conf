# type: yaml
# ==================================
# General tips
# ----------------------------------
# 1. Everywhere you can use OS specific configuration for string values by using
# :windows, :macos, :linux, :unix etc entries:
#    exe:
#      :windows: c:\path\cool.exe
#      :linux: /home/name/path/cool
# 2. Everywhere in strings you can use variables #{solution_directory} and
# #{solution_name}
#    Nuget:
#      exe: "#{solution_directory}/.nuget/nuget.exe"
# 3. Use 'clean_configuration' to clean value of hash entry
#    MSBuild:
#      options:
#        clean_configuration: true
#        target: ["Build"]
# ==================================

# 'local_configuration' set relative path from solution where local
# configuration stored. By default it is '.alpaca.conf' file near *.sln
local_configuration:        '.alpaca.conf'

# 'no_build' set array of tags that mark solution as no build solutions.
# By default solutions that contains '.nobuild' string in the name will not
# be built/packaged or any other changes not going to be processed
no_build:                   ['.nobuild']

# 'project_types' set array of project types for tests. Type can be used from
# command line interface for 'test' command and 'name' is a string that project
# name should contain(note that it's a name and not file name or path)
project_types:
  -  type:                  unit
     name:                  Unit.Tests
  -  type:                  service
     name:                  Service.Tests

# You can set 'all_packages' in global configuration so you don't need to store
# shared fields in each package configuration. Note that local configuration
# can still override any entry for example you can set global source to
# nuget.org but for some specific solution override it to your own feed
#
# ```
# all_packages:
#   authors:                  ['Vasyl', 'Kate']
#   owners:                   ['Vasyl', 'Kate']
#   projectUrl:               https://github.com/vasyl-purchel/alpaca
#   iconUrl:                  'https://raw.githubusercontent.com/vasyl-purchel/alpaca/master/lib/alpacabuildtool/data/logo.jpg'
#   requireLicenseAcceptance: false
#   language:                 en-GB
#   source:                   nuget.org
# ```

# ==================================
# Tools are configured in such way that you can use 'absolute path to exe' or
# just name of executable file if it is accessible in ENV['PATH'] or use nuget
# package to download it(this is not applies to MSBuild and Nuget tools)
# ==================================

# 'MSBuild' set configuration for MSBuild
# 'exe' - msbuild executable file
# 'options' - command line options for msbuild.
# Full list is [here](https://msdn.microsoft.com/en-us/library/ms164311.aspx)
MSBuild:
  exe:                      'C:\Program Files (x86)\MSBuild\12.0\Bin\MSBuild.exe'
  options:
    target:                 ["Clean", "Rebuild"]
    verbosity:              "minimal"
    nologo:                 true

# 'Nuget' set configuration for Nuget
# 'exe' - path to nuget.exe
# 'options' - shared options for all commands
# 'commands' - configuration for each command
# Full list is [here](https://docs.nuget.org/consume/command-line-reference)
Nuget:
  exe:
    :windows:               'C:\Nuget\Nuget.exe'
    :linux:                 'mono --runtime=v4.0.30319 /usr/lib/nuget/nuget.exe'
  options:
    NonInteractive:         true
  commands:
    pack:
      NoPackageAnalysis:    true
      Symbols:              true
      OutputDirectory:      "#{solution_directory}/.output/"

# 'NUnit' set configuration for NUnit
# if nunit-console.exe is not accessible via ENV['PATH'] then it will be
# downloaded(unless you override 'exe' to absolute path) via nuget package
#
# AutoDownload configured with 'package_id', 'pre_release'(to use release or
# pre-release versions also)
# By default nunit use pre-release version and for time writting it was 3.0-beta
# Note: if you want to use 2.6 version then you need to modify nunit tool
# as current release and pre-release versions for nunit-console use different
# options style(msdos and unix like styles - /option or --option)
#
# 'options' - set command line options, for the full list take a look
# [here](http://nunit.org/index.php?p=consoleCommandLine&r=3.0)
NUnit:
  exe:                      nunit-console.exe
  package_id:               NUnit.Console
  pre_release:              true
  options:
    noheader:               true
    process:                Multiple
    work:                   "#{solution_directory}/.tests"
    config:                 Release
    output:                 "#{solution_directory}/.tests/tests.log"
    result:                 "#{solution_directory}/.tests/UnitTestsResult.xml;format=nunit3"

# 'OpenCover' set configuration for OpenCover same to NUnit with AutoDownload
# but it use specific variables #{EXE} and #{ARGS} to put inner tool(nunit)
# exe and arguments for tests to wrap them to check coverage
OpenCover:
  exe:                      opencover.console.exe
  package_id:               OpenCover
  pre_release:              false
  options:
    register:              user
    target:                "#{EXE}"
    targetargs:            "#{ARGS}"
    mergebyhash:           true
    output:                "#{solution_directory}/.tests/coverage.xml"

# 'NUnitOrange' set configuration for NUnitOrange same to NUnit with
# AutoDownload but it is not using options as nunitorange.exe interface take
# 2 arguments - input and output file names to convert reports
NUnitOrange:
  exe:                      nunitorange.exe
  package_id:               NUnitOrange
  pre_release:              false
  input:                    "#{solution_directory}/.tests/UnitTestsResult.xml"
  output:                   "#{solution_directory}/.tests/UnitTestsResult.html"

# 'ReportGenerator' set configuration for ReportGenerator same to NUnit with
# AutoDownload and options
ReportGenerator:
  exe:                      ReportGenerator.exe
  package_id:               ReportGenerator
  pre_release:              false
  options:
    reports:                "#{solution_directory}/.tests/coverage.xml"
    targetdir:              "#{solution_directory}/.tests"
    verbosity:              Info
    reporttypes:            Html
